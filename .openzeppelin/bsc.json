{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xF99a03187684092Ba98F22388502C0d0986B1B61",
      "txHash": "0x2c409eb0de67f08f784449e014612b487d994f557697101a2a233793052988d7",
      "kind": "transparent"
    },
    {
      "address": "0x794C1ded7895cC3418bBa76bF903D26881BFe213",
      "txHash": "0xe758cb545dde217189110396f75a2cace0cbbf64fee73702fd0719d997ff0bf4",
      "kind": "transparent"
    },
    {
      "address": "0xA61686bFb613B32a9349167Bae3F2DdF8bC883A5",
      "txHash": "0xcc40173e9a56a55af5cf4a3c41f8c60c29094e68e8ee9b2c4c401de3d9039c5f",
      "kind": "transparent"
    },
    {
      "address": "0x143D5761702a6c542d9BEcB6462716EB9Af19DBD",
      "txHash": "0xf470a354ffd1958b6551ef4dd11a95a74c4508c1563e121682d816aca47b886b",
      "kind": "transparent"
    },
    {
      "address": "0xD170dBe8ffF984d4B59Fdb475278599A9A514CD5",
      "txHash": "0x3ce65351306e404da5276e5844186d4b30581995b7e05f4f4f9fe9cb8f3dfa6b",
      "kind": "transparent"
    },
    {
      "address": "0x612ddDd9624B95CF9a3B7b764a42bcAE9cbA069D",
      "txHash": "0xdf6f4231ca7255a2e5c3bc4424fcce9a503f79d9776518949790530e8975bea2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "baf5728304ec36eea41cb26f3a41496b61a7191707ee46bc4624eddc4eccb361": {
      "address": "0x3A564A83ff254bF30dF3e4C41Ec4cc56f83FB1e6",
      "txHash": "0x8ef2575165bc813e97cb6226b3aa0339f140108ea9da135948a68a4fd5d5b38b",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1224",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:12"
          },
          {
            "label": "tokenWithPermit",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20Permit)1332",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:13"
          },
          {
            "label": "unlockPeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:15"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:16"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:17"
          },
          {
            "label": "userLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Lock)1393_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:24"
          },
          {
            "label": "userUnlocks",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_struct(Lock)1393_storage)dyn_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Lock)1393_storage)dyn_storage": {
            "label": "struct XradersLock.Lock[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1224": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Permit)1332": {
            "label": "contract IERC20Permit",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Lock)1393_storage)dyn_storage)": {
            "label": "mapping(address => struct XradersLock.Lock[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Lock)1393_storage)": {
            "label": "mapping(address => struct XradersLock.Lock)",
            "numberOfBytes": "32"
          },
          "t_struct(Lock)1393_storage": {
            "label": "struct XradersLock.Lock",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a5952bba3fc2357335f475a4f19a013fde0c3aa7f4a5e2b994ad0f8e3689241a": {
      "address": "0x6B536b4a29755DBB73Eb846017b740bD80562737",
      "txHash": "0xd9fda0dc637c3fad464d5600e40c23c732cba0be27e64f1041e14c57e2d607e5",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)877",
            "contract": "XradersLockClaim",
            "src": "contracts/XradersLockClaim.sol:13"
          },
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "XradersLockClaim",
            "src": "contracts/XradersLockClaim.sol:14"
          },
          {
            "label": "lastMerkleUpdateDay",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "XradersLockClaim",
            "src": "contracts/XradersLockClaim.sol:15"
          },
          {
            "label": "lastClaimDay",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "XradersLockClaim",
            "src": "contracts/XradersLockClaim.sol:17"
          },
          {
            "label": "claimedAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "XradersLockClaim",
            "src": "contracts/XradersLockClaim.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)138_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)202_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)877": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "bfbb5bc460034d18bfdc1f0c29c658738460c9faca709dcf0372afe3d189661c": {
      "address": "0x8c4185E476524B88F4cE2399703aeb2CfCe03c5E",
      "txHash": "0x665a06f0399817418f99fd26e56548f94f98aebad0d779c1d9b51c18eee99551",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1224",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:12"
          },
          {
            "label": "tokenWithPermit",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20Permit)1332",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:13"
          },
          {
            "label": "unlockPeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:15"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:16"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:17"
          },
          {
            "label": "userLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Lock)1393_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:24"
          },
          {
            "label": "userUnlocks",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_struct(Lock)1393_storage)dyn_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Lock)1393_storage)dyn_storage": {
            "label": "struct XradersLock.Lock[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1224": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Permit)1332": {
            "label": "contract IERC20Permit",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Lock)1393_storage)dyn_storage)": {
            "label": "mapping(address => struct XradersLock.Lock[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Lock)1393_storage)": {
            "label": "mapping(address => struct XradersLock.Lock)",
            "numberOfBytes": "32"
          },
          "t_struct(Lock)1393_storage": {
            "label": "struct XradersLock.Lock",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5ebd2ea8e17d504640a97901fc4f6db1ad3953d25e4a6f8bebcc05ecadba6395": {
      "address": "0xf89F2a4BB97743fC5C24f41E4f01C90B2DC982d3",
      "txHash": "0xcb447709f92752115e9508744a0e45d07768d2ab0117cd8893af3ef03c4e3dcc",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1224",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:13"
          },
          {
            "label": "tokenWithPermit",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20Permit)1332",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:14"
          },
          {
            "label": "unlockPeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:16"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:17"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:18"
          },
          {
            "label": "userLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Lock)1790_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:25"
          },
          {
            "label": "userUnlocks",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_struct(Lock)1790_storage)dyn_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:26"
          },
          {
            "label": "pancakeRouter",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IUniswapV2Router02)1758",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:42"
          },
          {
            "label": "path",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Lock)1790_storage)dyn_storage": {
            "label": "struct XradersLock.Lock[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1224": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Permit)1332": {
            "label": "contract IERC20Permit",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)1758": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Lock)1790_storage)dyn_storage)": {
            "label": "mapping(address => struct XradersLock.Lock[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Lock)1790_storage)": {
            "label": "mapping(address => struct XradersLock.Lock)",
            "numberOfBytes": "32"
          },
          "t_struct(Lock)1790_storage": {
            "label": "struct XradersLock.Lock",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e5e428dc903dd4f7cd0de652d6cfd7da66b48035632231e29076c4bf2f0e7c58": {
      "address": "0x077eb18d7cBf499f991960013da4278dBe232378",
      "txHash": "0xa0947b93d5b1d37cf5b5fd85723ac92f8ef09264b4d107d46d2f70d38d43f7a5",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1224",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:13"
          },
          {
            "label": "tokenWithPermit",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20Permit)1332",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:14"
          },
          {
            "label": "unlockPeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:16"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:17"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:18"
          },
          {
            "label": "userLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Lock)1790_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:25"
          },
          {
            "label": "userUnlocks",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_struct(Lock)1790_storage)dyn_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:26"
          },
          {
            "label": "pancakeRouter",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IUniswapV2Router02)1758",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:42"
          },
          {
            "label": "path",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Lock)1790_storage)dyn_storage": {
            "label": "struct XradersLock.Lock[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1224": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Permit)1332": {
            "label": "contract IERC20Permit",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)1758": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Lock)1790_storage)dyn_storage)": {
            "label": "mapping(address => struct XradersLock.Lock[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Lock)1790_storage)": {
            "label": "mapping(address => struct XradersLock.Lock)",
            "numberOfBytes": "32"
          },
          "t_struct(Lock)1790_storage": {
            "label": "struct XradersLock.Lock",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "55c89ff0dff293acda505e8a9727e9cf40fdef4173ee5f88b3c2fb043d07d8ca": {
      "address": "0x77836F4d8e52cda93d0d776174535C1c215CC9Eb",
      "txHash": "0xb3d170a73834a222d33945da504bff6faf52da6babbada1b83095344c5ec2263",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1224",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:13"
          },
          {
            "label": "tokenWithPermit",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20Permit)1332",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:14"
          },
          {
            "label": "unlockPeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:16"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:17"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:18"
          },
          {
            "label": "userLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Lock)1790_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:25"
          },
          {
            "label": "userUnlocks",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_struct(Lock)1790_storage)dyn_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:26"
          },
          {
            "label": "pancakeRouter",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IUniswapV2Router02)1758",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:42"
          },
          {
            "label": "path",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Lock)1790_storage)dyn_storage": {
            "label": "struct XradersLock.Lock[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1224": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Permit)1332": {
            "label": "contract IERC20Permit",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)1758": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Lock)1790_storage)dyn_storage)": {
            "label": "mapping(address => struct XradersLock.Lock[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Lock)1790_storage)": {
            "label": "mapping(address => struct XradersLock.Lock)",
            "numberOfBytes": "32"
          },
          "t_struct(Lock)1790_storage": {
            "label": "struct XradersLock.Lock",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "00fa8507bd38f2707e17e59188957b978d0149af6586ff866796e35323bd1f25": {
      "address": "0x8E2231b8Ee210D104c9Ff26F227448E1f7D2279A",
      "txHash": "0x31a4c67e8289b4d5859694add7b6af1c7b5f2e89cd7d3749975a24647e3886ab",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1224",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:13"
          },
          {
            "label": "tokenWithPermit",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20Permit)1332",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:14"
          },
          {
            "label": "unlockPeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:16"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:17"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:18"
          },
          {
            "label": "userLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Lock)1790_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:25"
          },
          {
            "label": "userUnlocks",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_struct(Lock)1790_storage)dyn_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:26"
          },
          {
            "label": "pancakeRouter",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IUniswapV2Router02)1758",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:40"
          },
          {
            "label": "path",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Lock)1790_storage)dyn_storage": {
            "label": "struct XradersLock.Lock[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1224": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Permit)1332": {
            "label": "contract IERC20Permit",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)1758": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Lock)1790_storage)dyn_storage)": {
            "label": "mapping(address => struct XradersLock.Lock[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Lock)1790_storage)": {
            "label": "mapping(address => struct XradersLock.Lock)",
            "numberOfBytes": "32"
          },
          "t_struct(Lock)1790_storage": {
            "label": "struct XradersLock.Lock",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "aa1ac94fa3b2a8b7efec6a45e5b512b2b85c77da1c68209a9ad3532e70a8241d": {
      "address": "0x284be6f94A9224b4a5f0d9E3Faf6492624DDe607",
      "txHash": "0x04498428271ef636d061255aaba2356ac0c9287a6a676c1c9e861ac5e552e8ea",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20)1224",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:14"
          },
          {
            "label": "tokenWithPermit",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20Permit)1332",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:15"
          },
          {
            "label": "unlockPeriod",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:17"
          },
          {
            "label": "penaltyRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:18"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:19"
          },
          {
            "label": "userLock",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(Lock)1791_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:26"
          },
          {
            "label": "userUnlocks",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_array(t_struct(Lock)1791_storage)dyn_storage)",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:27"
          },
          {
            "label": "pancakeRouter",
            "offset": 0,
            "slot": "7",
            "type": "t_contract(IUniswapV2Router02)1758",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:42"
          },
          {
            "label": "path",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_address)dyn_storage",
            "contract": "XradersLock",
            "src": "contracts/XradersLock.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)80_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Lock)1791_storage)dyn_storage": {
            "label": "struct XradersLock.Lock[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1224": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Permit)1332": {
            "label": "contract IERC20Permit",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)1758": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Lock)1791_storage)dyn_storage)": {
            "label": "mapping(address => struct XradersLock.Lock[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Lock)1791_storage)": {
            "label": "mapping(address => struct XradersLock.Lock)",
            "numberOfBytes": "32"
          },
          "t_struct(Lock)1791_storage": {
            "label": "struct XradersLock.Lock",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
